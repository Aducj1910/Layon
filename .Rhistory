knitr::opts_chunk$set(echo = TRUE, message=FALSE, error = TRUE,
fig.height = 4)
library(tidyverse)
library(lubridate)
library(viridisLite)
## The echo = FALSE argument to this chunk
##   means that the code will not appear in the output
##   but the code will run so that the data is in the session
## Read Lake Monona data
## Change the order of ff_cat from alphabetical to calendar order
## We will see code like this during week 3 of the course
monona = read_csv("../../data/lake-monona-winters-2022.csv") %>%
mutate(ff_cat = reorder(ff_cat, ff_x))
ggplot(monona, aes(x=duration)) +
geom_histogram(boundary = 0, binwidth = 10,
color = "black", fill = "white")
View(monona)
View(monona)
View(monona)
##   when the tidyverse library is loaded, messages are generated that we do not want to include in the knitted document
## setting the chunk argument include = FALSE means this chunk is executed, but the text in the chunk and any output do not appear in the knitted document
## Hash tags allow you to comment-out the code; you can use multiple depending on your preference but only one is needed.
## Any characters after a hash tag on a line are comments.
## 'knitr' is the package that turns R Markdown into a document
## The following command sets some options for this R Markdown file
##   echo = TRUE means that the code in R chunks will appear the knitted document
##   message = FALSE and warning = FALSE mean that messages and warnings do not appear in the final document
##   error = TRUE means the document will continue to knit in the presence of errors while knitting
##   fig.height = 4 means figures are 4 inches tall unless otherwise specified
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE,
error = TRUE, fig.height = 4)
## The `library()' function loads in a package; the package must already be installed.
## `tidyverse' is the name of a collection of more than a dozen packages designed to work with each other.
## The library(tidyverse) command loads eight core packages, including ggplot2
## Others we often use, such as lubridate, need to be loaded separately
## The 'lubridate' package has useful functions for dates.
library(tidyverse)
library(lubridate)
## `mendota` is a new object.
## The `=` assigns the loaded data set to the object name `mendota`.
## You will often see `<-' instead as the assignment operator.
##   I use `=` almost all the time, but `<-` is more common.
## read_csv() is a function in the tidyverse for reading in .csv files.
## There is a base R function named read.csv(). Use read_csv() instead.
## If you use read.csv(), character variables get changed to factors
##   and variable names might get changed.
## The argument to read_csv() is a path to the file with the data
## The '..' means go up a directory
## Use a '/' after a directory
## The result of the code below is to create a data frame named mendota
##   by reading in the data in the file.
### COURSE/data/ contains the data file
### COURSE/lectures/unit2-ggplot2/ is your working directory
mendota = read_csv("../../data/lake-mendota-winters-2022.csv")
spec(mendota)
ggplot(data = mendota, mapping = aes(x = duration)) +
geom_histogram(binwidth = 20, center = 50)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, error = TRUE,
fig.height = 4)
library(tidyverse)
library(lubridate)
library(viridisLite)
## The echo = FALSE argument to this chunk
##   means that the code will not appear in the output
##   but the code will run so that the data is in the session
## Read Lake Monona data
## Change the order of ff_cat from alphabetical to calendar order
## We will see code like this during week 3 of the course
monona = read_csv("../../data/lake-monona-winters-2022.csv") %>%
mutate(ff_cat = reorder(ff_cat, ff_x))
source("~/.active-rstudio-document", echo=TRUE)
View(monona)
count(monona$duration)
table(monona$duration)
?geom_histogram()
ggplot(monona, aes(x = duration)) +
geom_histogram(boundary = 70, binwidth = 5, fill = "cyan", color = "forestgreen") +
xLab("Days Closed With Ice") +
yLab("Total"))
ggplot(monona, aes(x = duration)) +
geom_histogram(boundary = 70, binwidth = 5, fill = "cyan", color = "forestgreen") +
xLab("Days Closed With Ice") +
yLab("Total")
ggplot(monona, aes(x = duration)) +
geom_histogram(boundary = 70, binwidth = 5, fill = "cyan", color = "forestgreen") +
xLab("Days Closed With Ice") +
yLab("Total")
ggplot(monona, aes(x = duration)) +
geom_histogram(boundary = 70, binwidth = 5, fill = "cyan", color = "forestgreen") +
xlab("Days Closed With Ice") +
ylab("Total")
ggplot(monona, aes(x = duration)) +
geom_histogram(boundary = 70, binwidth = 5, fill = "cyan", color = "forestgreen") +
xlab("Days Closed With Ice") +
ylab("Total") +
ggtitle("Days Closed with Ice vs Total")
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
<!--  geom_smooth(se=FALSE)-->
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
# geom_smooth(se=FALSE)
ggplot(monona, aes(x = year1, y = duration)) +
geom_point()
# geom_smooth(se=FALSE)
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
geom_smooth(se=TRUE)
ggplot(monona, aes(x = year1, y = duration)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(monona, aes(y=duration))
+ geom_box(fill="yellow", color = "magenta")
ggplot(monona, aes(y=duration))
+ geom_boxplot(fill="yellow", color = "magenta")
ggplot(monona, aes(y=duration)) +
geom_boxplot(fill="yellow", color = "magenta")
ggplot(monona, aes(y=duration)) +
geom_boxplot(fill="yellow", color = "magenta") +
ylab("Days Closed with Ice")
ggplot(monona, aes(y=duration)) +
geom_boxplot(fill="yellow", color = "magenta") +
ylab("Days Closed with Ice") +
ggtitle("Distribution of the Days Lake Monona is Closed By Ice")
median(monona$duration)
ggplot(monona, aes(x=ff_cat)) +
geom_bar()
ggplot(monona, aes(x=ff_cat)) +
geom_bar() +
xlab("Half Month Periods") +
ylab("Amount of First Freeze") +
ggtitle("Count of first freeze per half month periods")
ggplot(monona, aes(x=ff_cat)) +
geom_bar() +
xlab("Half Month Periods") +
ylab("Amount of First Freeze") +
ggtitle("Count of first freeze per different half month periods")
ggplot(monona, aes(x = ff_x, y = duration, color = period50)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
scale_color_viridis_d()
ggplot(monona, aes(x = ff_x, y = duration, color = period50)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
scale_color_viridis_d() +
guides(color = guide_legend(title="Time Period"))
ggplot(monona, aes(x = ff_x, y = duration, color = period50)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
scale_color_viridis_d() +
xlab("Days after June 30") +
yLab("Days Closed With Ice") +
guides(color = guide_legend(title="Time Period"))
ggplot(monona, aes(x = ff_x, y = duration, color = period50)) +
geom_point() +
geom_smooth(se = FALSE, method = "lm") +
scale_color_viridis_d() +
xlab("Days after June 30") +
ylab("Days Closed With Ice") +
guides(color = guide_legend(title="Time Period"))
ggplot(monona, aes=(x = ff_x, y = duration)) +
ggplot(monona, aes=(x = ff_x, y = duration)) +
ggplot(monona, aes=(x = ff_x, y = duration) +
ggplot(monona, aes=(x = ff_x, y = duration)) +
ggplot(monona, aes(x = ff_x, y = duration)) +
geom_point() +
facet_wrap(vars(period50))
ggplot(monona, aes(x = ff_x, y = duration)) +
geom_point() +
facet_wrap(vars(period50)) +
xlab("Days after June 30") +
ylab("Days Closed With Ice")
ggplot(monona, aes(x = ff_x, y = duration)) +
geom_point() +
facet_wrap(vars(period50)) +
xlab("Days after June 30") +
ylab("Days Closed With Ice") +
ggtitle("Time vs Days Closed With Ice in Different 50-Year Time Periods")
setwd("~/Desktop/Programming/LayonMadData/Layon")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("../../scripts/viridis.R")
layoff = read_csv('../../data/warn.csv')
layoff = read_csv('../data/warn.csv')
layoff = read_csv('data/warn.csv')
problems(layoff)
View(layoff)
problems(layoff)
layoff = read_csv('data/warn.csv')
View(layoff)
